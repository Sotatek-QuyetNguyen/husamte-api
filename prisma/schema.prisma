// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model CrawlerConfig {
  id          Int       @id @default(autoincrement())
  key         String    @db.VarChar(100)
  order       Int       @default(0)
  stringValue String    @default("") @db.VarChar(1000)
  numberValue Int       @default(0)
  isMulti     Boolean   @default(true)
  instanceId  String?
  lastPing    DateTime? @default(now())

  @@unique([key, order], name: "key_order_unique")
  @@index(key)
  @@index([key, instanceId])
  @@map("crawler_configs")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique @db.VarChar(100)
  password      String    @db.VarChar(256)
  name          String?   @db.VarChar(100)
  dateOfBirth   DateTime  @db.Date()
  status        Int       @default(1)
  role          Int       @default(0)
  address       String?   @db.VarChar(256)
  secretKey     String?   @db.VarChar(500)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt

  tokens        TokenOfUser[]
  properties    Property[]
  owned         OwnerOfProperty[]
  @@map("users")
}

model TokenOfUser {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.VarChar(255)
  userId    Int      @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@map("tokens")
}

model Property {
  id              Int      @id @default(autoincrement())
  createdBy       Int      @map("created_by")
  name            String?  @map("asset_name") @db.VarChar(255)
  description     String?  @db.VarChar(255)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @map("updated_at")

  user         User              @relation(fields: [createdBy], references: [id])
  owner        OwnerOfProperty[]

  @@map("properties")
}

model OwnerOfProperty {
  propertyId     Int
  userId         Int
  percentage     Float
  createdAt      DateTime @default(now()) @map("created_at")

  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  property       Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@id([propertyId, userId])
  @@map("owner_of_property")
}
